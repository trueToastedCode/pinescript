// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © iFlyTheMoon

//@version=5

library("CandlePattern", overlay=true)

import iFlyTheMoon/CandleSignals/1
import iFlyTheMoon/MoreCandleInfo/1

TYPE_BULLISH_HAMMER          = 0
TYPE_BEARISH_HAMMER          = 1
TYPE_BULLISH_INVERTED_HAMMER = 0
TYPE_BEARISH_INVERTED_HAMMER = 1
TYPE_DOJI_DRAGONFLY          = 0
TYPE_DOJI_LONG_LEGGED        = 1
TYPE_DOJI_GRAVESTONE         = 2
TYPE_BULLISH_SPINNING_TOP    = 0
TYPE_BEARISH_SPINNING_TOP    = 1
TYPE_BULLISH_ENGULFING       = 0
TYPE_BEARISH_ENGULFING       = 1

NAME_BULLISH_HAMMER          = "Bullish Hammer"
NAME_BEARISH_HAMMER          = "Bearish Hammer (Hanging Man)"
NAME_BULLISH_INVERTED_HAMMER = "Bullish Inverted Hammer"
NAME_BEARISH_INVERTED_HAMMER = "Bearish Inverted Hammer (Shooting Star)"
NAME_DOJI_DRAGONFLY          = "Dragonfly Doji"
NAME_DOJI_LONG_LEGGED        = "Long-legged Doji"
NAME_DOJI_GRAVESTONE         = "Gravestone Doji"
NAME_BULLISH_SPINNING_TOP    = "Bullish Spinning Top"
NAME_BEARISH_SPINNING_TOP    = "Bearish Spinning Top"
NAME_BULLISH_ENGULFING       = "Bullish Engulfing"
NAME_BEARISH_ENGULFING       = "Bearish Engulfing"

DESC_BULLISH_HAMMER          = "Typically occur after a price decline. Indicate a potential price reversal to the upside."
DESC_BEARISH_HAMMER          = "Typically occur after a price increase. Indicate a potential price reversal to the downside."
DESC_BULLISH_INVERTED_HAMMER = "Typically occur after a price decline. Indicate a potential price reversal to the upside."
DESC_BEARISH_INVERTED_HAMMER = "Typically occur after a price increase. Indicate a potential price reversal to the downside."
DESC_DOJI_DRAGONFLY          = "Often appears at the bottom of a downtrend and suggests a potential reversal to the upside. It indicates that despite the bearish pressure, buyers were able to push the price back up to the session's opening level, signaling potential strength."
DESC_DOJI_LONG_LEGGED        = "Signifies indecision in the market. It suggests a potential reversal or continuation depending on the preceding trend and subsequent price action."
DESC_DOJI_GRAVESTONE         = "Typically occurs at the top of an uptrend and indicates a potential reversal to the downside. It suggests that despite bullish attempts to push the price higher, sellers were able to drive the price back down to the opening level by the close of the session."
DESC_BULLISH_SPINNING_TOP    = "If the spinning top occurs at the bottom of a downtrend, it could signal that a bullish reversal may happen. Conversely, if the spinning top occurs at the top of an uptrend, it could suggest a bearish reversal. It may also suggest a sideways movement."
DESC_BEARISH_SPINNING_TOP    = "If the spinning top occurs at the bottom of a downtrend, it could signal that a bullish reversal may happen. Conversely, if the spinning top occurs at the top of an uptrend, it could suggest a bearish reversal. It may also suggest a sideways movement."
DESC_BULLISH_ENGULFING       = "Buying pressure overwhelming selling pressure, implying an uptrend."
DESC_BEARISH_ENGULFING       = "Selling pressure overwhelming buying pressure, implying a downtrend."

export type_bullish_hammer() => TYPE_BULLISH_HAMMER
export type_bearish_hammer() => TYPE_BEARISH_HAMMER
export type_bullish_inverted_hammer() => TYPE_BULLISH_INVERTED_HAMMER
export type_bearish_inverted_hammer() => TYPE_BEARISH_INVERTED_HAMMER
export type_doji_dragonfly() => TYPE_DOJI_DRAGONFLY
export type_doji_long_legged() => TYPE_DOJI_LONG_LEGGED
export type_doji_gravestone() => TYPE_DOJI_GRAVESTONE
export type_bullish_spinning_top() => TYPE_BULLISH_SPINNING_TOP
export type_bearish_spinning_top() => TYPE_BEARISH_SPINNING_TOP
export type_bullish_engulfing() => TYPE_BULLISH_ENGULFING
export type_bearish_engulfing() => TYPE_BEARISH_ENGULFING

export type CandlePatternResult
	int type_hammer
	int type_inverted_hammer
	int type_doji
	int type_spinning_top
	int type_engulfing

export type CandlePattern
	CandleSignals.CandleSignals          candle_signals
	array<MoreCandleInfo.MoreCandleInfo> more_candle_info
	CandlePatternResult                  candle_pattern_result

process_hammer(CandlePattern id) =>
	for _ = 0 to 0
		more_candle_info = array.first(id.more_candle_info)
		if more_candle_info.shadow_high / more_candle_info.spread >= 0.1
			break
		if more_candle_info.shadow_low / more_candle_info.abs_body < 2.
			break
		if more_candle_info.abs_body / more_candle_info.spread < 0.1
			break
		if more_candle_info.is_bullish
	    	id.candle_pattern_result.type_hammer := TYPE_BULLISH_HAMMER
			break
	    if more_candle_info.is_bearish
	    	id.candle_pattern_result.type_hammer := TYPE_BEARISH_HAMMER

process_inverted_hammer(CandlePattern id) =>
	for _ = 0 to 0
        more_candle_info = array.first(id.more_candle_info)
		if more_candle_info.shadow_low / more_candle_info.spread >= 0.1
			break
		if more_candle_info.shadow_high / more_candle_info.abs_body < 2.
			break
		if more_candle_info.abs_body / more_candle_info.spread < 0.1
			break
		if more_candle_info.is_bullish
	    	id.candle_pattern_result.type_inverted_hammer := TYPE_BULLISH_INVERTED_HAMMER
			break
	    if more_candle_info.is_bearish
	    	id.candle_pattern_result.type_inverted_hammer := TYPE_BEARISH_INVERTED_HAMMER

process_doji_signal(CandlePattern id) =>
	for _ = 0 to 0
		more_candle_info = array.first(id.more_candle_info)
		if more_candle_info.abs_body / more_candle_info.spread >= 0.1
			break
		if more_candle_info.shadow_high / more_candle_info.spread < 0.2
			id.candle_pattern_result.type_doji := TYPE_DOJI_DRAGONFLY
			break
		if more_candle_info.shadow_low / more_candle_info.spread < 0.2
			id.candle_pattern_result.type_doji := TYPE_DOJI_GRAVESTONE
			break
		id.candle_pattern_result.type_doji := TYPE_DOJI_LONG_LEGGED

process_spinning_top_signal(CandlePattern id) =>
	for _ = 0 to 0
		more_candle_info = array.first(id.more_candle_info)
		body_spread_ratio = more_candle_info.abs_body / more_candle_info.spread
		if body_spread_ratio < 0.1
			break
		if body_spread_ratio > 0.3
			break
		if more_candle_info.body_low < low + more_candle_info.spread * 0.3
			break
		if more_candle_info.body_high > high - more_candle_info.spread * 0.3
			break
		if more_candle_info.is_bullish
			id.candle_pattern_result.type_spinning_top := TYPE_BULLISH_SPINNING_TOP
			break
		if more_candle_info.is_bearish
			id.candle_pattern_result.type_spinning_top := TYPE_BEARISH_SPINNING_TOP

process_engulfing_signal(CandlePattern id) =>
	for _ = 0 to 0
		if array.size(id.more_candle_info) < 2
			break
		more_candle_info = array.first(id.more_candle_info)
        prev_more_candle_info = array.get(id.more_candle_info, 1)
		if more_candle_info.is_bullish and prev_more_candle_info.is_bearish and more_candle_info.body_low < prev_more_candle_info.body_low and more_candle_info.body_high > prev_more_candle_info.body_high
			id.candle_pattern_result.type_engulfing := TYPE_BULLISH_ENGULFING
			break
		if more_candle_info.is_bearish and prev_more_candle_info.is_bullish and more_candle_info.body_low < prev_more_candle_info.body_low and more_candle_info.body_high > prev_more_candle_info.body_high
			id.candle_pattern_result.type_engulfing := TYPE_BEARISH_ENGULFING

add_hammer_signal(CandlePattern id) =>
	if na(id.candle_pattern_result.type_hammer)
		na
	else if id.candle_pattern_result.type_hammer == TYPE_BULLISH_HAMMER
		CandleSignals.addCandleSignal(id.candle_signals, NAME_BULLISH_HAMMER, DESC_BULLISH_HAMMER, CandleSignals.type_bullish())
	else if id.candle_pattern_result.type_hammer == TYPE_BEARISH_HAMMER
		CandleSignals.addCandleSignal(id.candle_signals, NAME_BEARISH_HAMMER, DESC_BEARISH_HAMMER, CandleSignals.type_bearish())

add_inverted_hammer_signal(CandlePattern id) =>
	if na(id.candle_pattern_result.type_inverted_hammer)
		na
	else if id.candle_pattern_result.type_inverted_hammer == TYPE_BULLISH_INVERTED_HAMMER
		CandleSignals.addCandleSignal(id.candle_signals, NAME_BULLISH_INVERTED_HAMMER, DESC_BULLISH_INVERTED_HAMMER, CandleSignals.type_bullish())
	else if id.candle_pattern_result.type_inverted_hammer == TYPE_BULLISH_INVERTED_HAMMER
		CandleSignals.addCandleSignal(id.candle_signals, NAME_BEARISH_INVERTED_HAMMER, DESC_BEARISH_INVERTED_HAMMER, CandleSignals.type_bearish())

add_doji_signal(CandlePattern id) =>
	if na(id.candle_pattern_result.type_doji)
		na
	else if id.candle_pattern_result.type_doji == TYPE_DOJI_DRAGONFLY
		CandleSignals.addCandleSignal(id.candle_signals, NAME_DOJI_DRAGONFLY, DESC_DOJI_DRAGONFLY, CandleSignals.type_bullish())
	else if id.candle_pattern_result.type_doji == TYPE_DOJI_LONG_LEGGED
		CandleSignals.addCandleSignal(id.candle_signals, NAME_DOJI_LONG_LEGGED, DESC_DOJI_LONG_LEGGED, CandleSignals.type_neutral())
	else if id.candle_pattern_result.type_doji == TYPE_DOJI_GRAVESTONE
		CandleSignals.addCandleSignal(id.candle_signals, NAME_DOJI_GRAVESTONE, DESC_DOJI_GRAVESTONE, CandleSignals.type_bearish())

add_spinning_top_signal(CandlePattern id) =>
	if na(id.candle_pattern_result.type_spinning_top)
		na
	else if id.candle_pattern_result.type_spinning_top == TYPE_BULLISH_SPINNING_TOP
		CandleSignals.addCandleSignal(id.candle_signals, NAME_BULLISH_SPINNING_TOP, DESC_BULLISH_SPINNING_TOP, CandleSignals.type_bullish())
	else if id.candle_pattern_result.type_spinning_top == TYPE_BEARISH_SPINNING_TOP
		CandleSignals.addCandleSignal(id.candle_signals, NAME_BEARISH_SPINNING_TOP, DESC_BEARISH_SPINNING_TOP, CandleSignals.type_bearish())

add_engulfing_signal(CandlePattern id) =>
	if na(id.candle_pattern_result.type_engulfing)
        na
	else if id.candle_pattern_result.type_engulfing == TYPE_BULLISH_ENGULFING
        CandleSignals.addCandleSignal(id.candle_signals, NAME_BULLISH_ENGULFING, DESC_BULLISH_ENGULFING, CandleSignals.type_bullish())
    else if id.candle_pattern_result.type_engulfing == TYPE_BEARISH_ENGULFING
        CandleSignals.addCandleSignal(id.candle_signals, NAME_BEARISH_ENGULFING, DESC_BEARISH_ENGULFING, CandleSignals.type_bearish())

process_candle_patterns(CandlePattern id) =>
	process_hammer(id)
	process_inverted_hammer(id)
	process_doji_signal(id)
	process_spinning_top_signal(id)
	process_engulfing_signal(id)

add_candle_signals(CandlePattern id) =>
	add_hammer_signal(id)
	add_inverted_hammer_signal(id)
	add_doji_signal(id)
	add_spinning_top_signal(id)
	add_engulfing_signal(id)

export init(CandleSignals.CandleSignals candle_signals, array<MoreCandleInfo.MoreCandleInfo> more_candle_info) =>
	candle_pattern = CandlePattern.new(candle_signals=candle_signals,
                                       more_candle_info=more_candle_info,
                                       candle_pattern_result=CandlePatternResult.new())
	process_candle_patterns(candle_pattern)
	add_candle_signals(candle_pattern)
	candle_pattern.candle_pattern_result

export arrayify(series CandlePatternResult id, int n_back) =>
	result = array.new<CandlePatternResult>(n_back + 1)
	for i = 0 to n_back
		array.set(result, i, id[i])
	result

